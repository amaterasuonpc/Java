Laboratorul 4 programare avansata.
->La Compulsory, la sortarea residentList am probleme cand incerc sa folosesc Collection.sort() desi am creat un comparator pentru Resident.
->Ca urmare am folosit Collection.sort() cu o functie lambda.

In rest la Compulsory am atins toate punctele:
[CHECK] Create an object-oriented model of the problem. You should have at least the following classes: Resident, Hospital, Main. 
[ almost CHECK] Create a list of residents, using an ArrayList implementation. Sort the residents, using a comparator.
[CHECK]  Create a set of hospitals, using a TreeSet implementation. Make sure that Hospital objects are comparable.
[CHECK] Create two maps (having different implementations) describing the residents and the hospital preferences and print them on the screen.
[CHECK] Using Java Stream API, write queries that display the residents who find acceptable H0 and H2, and the hospitals that have R0 as their top preference.

La bonus:
Am utilizat algoritmul descris in slide-uri,FIFO, si am pus conditia ca spitalul si resident sa aiba aceeasi preferinta: H0 il vrea pe R0 iar R0 vrea la H0
Am creat clasele Problem, Matching si Partition. Nu am inteles la ce puteam folosi Element.
AM utilizat javafaker pentru a da nume la fiecare resident
Solutia produsa de algoritmul meu nu este stable.In functie de ordinea in care sunt introdusi residents in array, exista o sansa ca un resident sa nu aiba spital asignat la final.

